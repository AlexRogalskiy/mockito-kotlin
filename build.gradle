group 'io.sureshg'
version '1.0'

buildscript {
    ext {
        kotlin_version = '1.1-M01'
        junit_plugin_version = '1.0.0-M2'
        junit_version = '5.0.0-M2'
        mockito_version = '2.1.0'
        gradle_version = '3.1'
    }
    repositories {
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
    }
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    // compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradle_version
}


task createTestResource << {
    def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
    String mockMaker = System.env.MOCK_MAKER
    if (mockMaker != null) {
        logger.info("Using MockMaker ${mockMaker}")
        mockMakerFile.parentFile.mkdirs()
        mockMakerFile.createNewFile()
        mockMakerFile.write(mockMaker)
    } else {
        logger.info("Using the default MockMaker!")
    }
}